/*BROWSER RESET*/
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after, q:before, q:after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

a {
  text-decoration: none;
}

/*HELPERS*/
/*Flex*/
.flex {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  -webkit-align-items: center;
  -moz-align-items: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  -moz-justify-content: center;
  justify-content: center;
}

.flex-col {
  -webkit-box-direction: normal;
  -webkit-box-orient: vertical;
  -webkit-flex-direction: column;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.flex-col-container {
  height: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  -webkit-align-items: center;
  -moz-align-items: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  -moz-justify-content: center;
  justify-content: center;
  -webkit-box-direction: normal;
  -webkit-box-orient: vertical;
  -webkit-flex-direction: column;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.flex-shim {
  -webkit-box-flex: 0;
  -webkit-flex: 0;
  -moz-box-flex: 0;
  -moz-flex: 0;
  -ms-flex: 0;
  flex: 0;
}

.flex-centred {
  -webkit-box-flex: 0;
  -webkit-flex: 0 1 auto;
  -moz-box-flex: 0;
  -moz-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  min-height: 0;
}

/*BUTTON SQUASH*/
@-webkit-keyframes transIn {
  from {
    transform: translateX(-50%);
  }
  to {
    transform: translateX(0);
  }
}
@-moz-keyframes transIn {
  from {
    transform: translateX(-50%);
  }
  to {
    transform: translateX(0);
  }
}
@keyframes transIn {
  from {
    transform: translateX(-50%);
  }
  to {
    transform: translateX(0);
  }
}
.trans-in {
  -webkit-animation-duration: 0.5s;
  -moz-animation-duration: 0.5s;
  animation-duration: 0.5s;
  -webkit-animation-iteration-count: 1;
  -moz-animation-iteration-count: 1;
  animation-iteration-count: 1;
  -webkit-animation-name: transIn;
  -moz-animation-name: transIn;
  animation-name: transIn;
  -webkit-animation-direction: normal;
  -moz-animation-direction: normal;
  animation-direction: normal;
  -webkit-animation-fill-mode: forwards;
  -moz-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
}

* {
  margin: 0;
}

main, section, h1, h2, h3, h4, h5, p, a, span, nav {
  color: #fff;
  font-family: "Oxygen Mono", monospace;
  text-shadow: 0 0 2px #fff, 0 0 1px #19d4ff;
}

text, input, button {
  font-family: "Homenaje", sans-serif;
}

body {
  background-color: #000;
  overflow: hidden;
}

nav {
  min-height: 10vh;
  width: 100%;
  display: flex;
  justify-content: space-around;
  text-transform: uppercase;
  position: fixed;
  top: 0;
  z-index: 100;
}
nav div {
  display: inline-flex;
  text-align: center;
  margin: auto;
  cursor: pointer;
  padding: 1rem;
}
nav .nav-btn.selected {
  color: #008ec6;
}

#background-image {
  position: absolute;
  top: 0;
  height: 0;
  height: 100vh;
  width: 100%;
  background-image: url("/assets/img/background.jpg");
  background-size: cover;
  opacity: 0.5;
  z-index: -1;
  filter: blur(15px);
}

#wrapper {
  position: absolute;
  top: 10vh;
  left: 0;
  max-height: 90vh;
  min-height: 90vh;
  max-width: 100vw;
  min-width: 100vw;
  overflow-x: hidden;
  /* For Opera */
  box-shadow: inset #19d4ff 0 0 50px 1px;
  filter: blur(0px);
}

.calculator {
  margin: 0 10vw;
  font-size: 1rem;
  position: relative;
  top: 2em;
}
@media only screen and (min-width: 31.25em) {
  .calculator {
    font-size: 1rem;
    margin-top: 3em;
  }
}

.bottom-button #dist-calc, .bottom-button #burn-calc, .bottom-button #mgmt-calc {
  padding: 20px;
  z-index: 100;
  background-color: rgba(0, 0, 0, 0);
  position: relative;
  color: white;
  font-size: 100%;
  border-color: rgba(0, 0, 0, 0);
  display: flex;
  margin: 0 auto 2.5em;
  padding: 2em 4em;
  cursor: pointer;
  transition: background-color 3s;
}
@media only screen and (min-width: 31.25em) {
  .bottom-button #dist-calc, .bottom-button #burn-calc, .bottom-button #mgmt-calc {
    margin-top: 3em;
    padding: 2em 11em;
  }
}
.bottom-button #dist-calc:hover, .bottom-button #burn-calc:hover {
  box-shadow: inset #96f0ff 0 0 50px 1px;
}
.bottom-button #mgmt-calc:hover {
  box-shadow: inset #ff1919 0 0 50px 1px;
}

.results-holder {
  display: none;
}
.results-holder .return-button {
  display: flex;
  justify-content: center;
  position: relative;
  bottom: 1em;
}
.results-holder .return-button input {
  padding: 20px;
  width: 60vw;
  background-color: rgba(150, 240, 255, 0.2);
  color: white;
  font-size: 100%;
  margin: 0 auto 2.5em;
  cursor: pointer;
  border-radius: 0;
  width: 65vw;
}
@media only screen and (min-width: 31.25em) {
  .results-holder .return-button input {
    width: 30vw;
  }
}
.results-holder .return-button input:hover {
  box-shadow: inset #96f0ff 0 0 50px 1px;
}

.results {
  background-color: rgba(0, 0, 0, 0);
  z-index: 99;
  width: 100vw;
  padding: 3em 0;
}
@media only screen and (min-width: 31.25em) {
  .results {
    padding: 4em 0;
  }
}
.results #calc-result {
  color: #7c788a;
  background-color: white;
}

.calculator input, .results input {
  display: inline-block;
  -webkit-box-sizing: content-box;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  border: 1px dotted rgba(252, 252, 252, 0);
  -webkit-border-radius: 13px;
  border-radius: 13px;
  color: #008ec6;
  text-align: center;
  -o-text-overflow: clip;
  text-overflow: clip;
  background: rgba(252, 252, 252, 0);
  text-shadow: 1px 1px 0 rgba(255, 255, 255, 0.66);
}

.calculator .input-vals, .results .output {
  display: flex;
  flex-flow: wrap;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin: 0 auto 1em;
  padding: 0 1.5em;
}
@media only screen and (min-width: 31.25em) {
  .calculator .input-vals, .results .output {
    flex-direction: row;
    padding: 0;
    justify-content: center;
  }
}
.calculator .input-vals div, .results .output div {
  margin-bottom: 0.5em;
  width: 50vw;
}
@media only screen and (min-width: 31.25em) {
  .calculator .input-vals div, .results .output div {
    margin-bottom: 2em;
    width: 40vw;
    height: 2em;
  }
}
.calculator .input-vals div:nth-child(odd), .results .output div:nth-child(odd) {
  text-align: center;
}
.calculator .input-vals div:nth-child(even), .results .output div:nth-child(even) {
  text-align: right;
  margin-bottom: 2em;
}
@media only screen and (min-width: 31.25em) {
  .calculator .input-vals div:nth-child(even), .results .output div:nth-child(even) {
    text-align: center;
  }
}
.calculator .input-vals input, .results .output input {
  font-size: 1.5em;
}
@media only screen and (min-width: 31.25em) {
  .calculator .input-vals input, .results .output input {
    font-size: 1.5em;
    width: 100%;
  }
}



/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
